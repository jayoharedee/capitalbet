<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile></DocumentationFile>
    <OutputPath>bin\Debug\netcoreapp3.1\</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="IdentityServer4" Version="3.1.3" />
    <PackageReference Include="IdentityServer4.AccessTokenValidation" Version="3.0.1" />
    <PackageReference Include="IdentityServer4.AspNetIdentity" Version="3.1.3" />
    <PackageReference Include="IdentityServer4.EntityFramework" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.8.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.1.2" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.3" />
    <PackageReference Include="Serilog" Version="2.9.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="3.2.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="3.0.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="5.4.1" />
    <PackageReference Include="System.Reactive.Core" Version="4.4.1" />
    <PackageReference Include="System.Reactive.Linq" Version="4.4.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Migrations\20200504063025_InitDb.cs" />
    <Compile Remove="Migrations\20200504063025_InitDb.Designer.cs" />
    <Compile Remove="Migrations\20200504063156_InitDb.cs" />
    <Compile Remove="Migrations\20200504063156_InitDb.Designer.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\dashboard\directives\dash-host.directive.ts" />
    <None Remove="ClientApp\src\app\dashboard\directives\dash-item-host.directive.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dash-data.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dash-item.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dash-template.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dashboard-config.model.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dashboard-item.model.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dashboard-storeage.ts" />
    <None Remove="ClientApp\src\app\dashboard\models\dashboard-template.model.ts" />
    <None Remove="ClientApp\src\app\dashboard\services\dashboard-local-storage.ts" />
    <None Remove="ClientApp\src\app\markets\models\active-trade.model.ts" />
    <None Remove="ClientApp\src\app\markets\models\stock-data.ts" />
    <None Remove="ClientApp\src\app\markets\models\trade-settings.model.ts" />
    <None Remove="ClientApp\src\app\models\access-token.model.ts" />
    <None Remove="ClientApp\src\app\models\account-type.model.ts" />
    <None Remove="ClientApp\src\app\models\application-role.model.ts" />
    <None Remove="ClientApp\src\app\models\application-user.model.ts" />
    <None Remove="ClientApp\src\app\models\currency-sentiment.model.ts" />
    <None Remove="ClientApp\src\app\models\error-dialog-config.model.ts" />
    <None Remove="ClientApp\src\app\models\hub-error.model.ts" />
    <None Remove="ClientApp\src\app\models\permission.model.ts" />
    <None Remove="ClientApp\src\app\models\stock-rate.mode.ts" />
    <None Remove="ClientApp\src\app\models\stock-trade-request.model.ts" />
    <None Remove="ClientApp\src\app\models\stock-type.model.ts" />
    <None Remove="ClientApp\src\app\models\wallet-transaction.model.ts" />
    <None Remove="ClientApp\src\app\pipes\keep-html.pipe.ts" />
    <None Remove="ClientApp\src\app\services\auth-guard.service.ts" />
    <None Remove="ClientApp\src\app\services\jwt-helper.ts" />
    <None Remove="ClientApp\src\app\services\token-interceptor.ts" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\libraries\com.capital.bet.data\com.capital.bet.data\com.capital.bet.data.csproj" />
    <ProjectReference Include="..\..\libraries\com.capital.bet.lib\com.capital.bet.lib.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
